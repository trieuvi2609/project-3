version: "3"

volumes:
  db-data:

services:
  db:
    container_name: local-postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: udacity
      POSTGRES_PASSWORD: Abcd^1234
      POSTGRES_DB: udacityprj3
    ports:
      - 5432:5432
    volumes:
      - "db-data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  reverseproxy:
      image: reverseproxy
      ports:
          - 8080:8080
      restart: always
      depends_on:
        - api-user
        - api-feed
  api-user:
    image: udagram-api-user
    environment:
      POSTGRES_USERNAME: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD 
      POSTGRES_DB: $POSTGRES_DB 
      POSTGRES_HOST: $POSTGRES_HOST
      AWS_REGION: $AWS_REGION 
      AWS_PROFILE: $AWS_PROFILE 
      AWS_BUCKET: $AWS_BUCKET
      JWT_SECRET: $JWT_SECRET
      URL: "http://localhost:8100"
    depends_on:
      - db
  api-feed:
    image: udagram-api-feed
    volumes:
      - $HOME/.aws:/root/.aws
    environment:
      POSTGRES_USERNAME: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD 
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST: $POSTGRES_HOST
      AWS_REGION: $AWS_REGION
      AWS_PROFILE: $AWS_PROFILE 
      AWS_BUCKET: $AWS_BUCKET
      JWT_SECRET: $JWT_SECRET
      URL: "http://localhost:8100"
    depends_on:
      - db
  frontend:
    image: udagram-frontend
    ports:
      - "8100:80"